@model IEnumerable<WebGallery.Models.AlbumViewModel>
<div class="row">
    @foreach (var item in Model)
    {

        var options = new AjaxOptions()
        {
            HttpMethod = "POST",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = item.Id.ToString(),
        };
        var commentId = item.Id + "comment";

        <div class="col-sm-6 col-md-4" id="@item.Id">
            <div class="thumbnail">
                <img class="img-responsive" src="../../img/Cool.JPG" alt="Img here">
                <div class="caption">
                    <h3>@Html.DisplayFor(modelItem => item.Name)</h3>
                    <p>All Comments</p>
                    <div class="js-CommetnContainerAlbum" data-AlbumId="@item.Id" id="@commentId">
                        @{
                            Html.RenderAction("Comment", new { id = item.Id });
                        }
                    </div>
                    @{
                        var optionsComments = new AjaxOptions()
                        {
                            HttpMethod = "POST",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = @commentId,
                        };
                    }
                    @using (Ajax.BeginForm("CreateComment", "Album", new { AlbumRefId = item.Id }, optionsComments, new { albumId = ViewBag.albumId, @class = "js-createCommentAlbumForm" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Add new comment</h4>
                            <hr />
                            @Html.TextBox("comment")
                            <input type="submit" />
                        </div>
                        <hr />
                    }

                    <div class="btn-group btn-group-justified" role="group" aria-label="">
                        @Html.ActionLink("Pictures", "Index", "Photo", new { id = item.Id }, new { @class = "btn btn-default" })
                        @Ajax.ActionLink("Delete", "Delete", new { id = item.Id }, options, new { @class = "btn btn-default" })
                    </div>

                </div>
            </div>
        </div>
                        }
</div>
@*//$(document).ready(function() {



    //    var createCommentAlbumForm = $(".js-createCommentAlbumForm");

    //    createCommentAlbumForm.submit(function (e) {

    //        e.preventDefault();

    //        var albumId = createCommentAlbumForm.attr("albumId");
    //        var comment = createCommentAlbumForm.find(".commentText").val();
    //        var commetnContainer = createCommentAlbumForm.parent().parent().find(".js-CommetnContainer");
    //        var data = { comment: comment, id: albumId }
    //        $.ajax({
    //            url: createCommentAlbumForm.attr('action'),
    //            type: "POST",
    //            data: data,
    //            dataType: "html",
    //            beforeSend: function () {
    //                // Show Spinner!!
    //                $(".LoaderRootContainer").fadeIn("200");
    //            },
    //            success: function (data) {
    //                commetnContainer.html(data);
    //            },
    //            error: function () {

    //            },
    //            complete: function () {

    //            }
    //        });
    //    });

    //});*@
